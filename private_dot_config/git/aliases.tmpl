# vim: ft=gitconfig

[alias]
  # A typo that turned useful
  addp = add -p

  # This should be default. Whatever.
  co = checkout

  # If we type `git git log`, just run `git log`.
  git = !git

  # Count the number of commits per person
  count = shortlog -sn --no-merges

  # Quickly amend a commit
  fast-amend = commit --amend --no-edit

  # Push the current HEAD to `origin`
  push-head = !git push origin $(git symbolic-ref HEAD)

  # Abbreviated status
  st = status -sb -uno --ignore-submodules=untracked

  # Shorter
  staged = diff --cached

  # Useful when resolving conflicts
  stc = diff --stat --name-status --cached

  # Show the root directory of the repo
  root = rev-parse --show-toplevel

  # Fetch and pull
  update-rebase = !git fetch -mp && git pull --rebase

  # "very" garbage collect
  vgc = repack -f -a -d --depth=250 --window=250

  # Show files that have been otherwise ignored
  ignored = ls-files --others -i --exclude-standard

  ls = log --color --graph --pretty=format:'%C(yellow)%d%Creset %Cgreen(%cr)%Creset %C(bold blue)[%an]%Creset %s %Cred(%h)%Creset' --abbrev-commit

  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%an]" --decorate --numstat

  t = !tig "$@"

  review-base = !git merge-base HEAD \"${REVIEW_BASE:-origin/master}\"

  # list files which have changed since REVIEW_BASE
  files = !git diff --name-only $(git merge-base HEAD \"${1:-${REVIEW_BASE:-master}}\")

  # Same as above, but with a diff stat instead of just names (better for interactive use)
  stat = !git diff --stat $(git merge-base HEAD \"${1:-${REVIEW_BASE:-master}}\")

  depgraph = !git madge image --webpack-config webpack.config.js --basedir . --style solarized-dark src

  review = !$EDITOR -p $(git files) +\"tabdo Gdiff ${REVIEW_BASE:-origin/master}\" +\"let g:gitgutter_diff_base = '${REVIEW_BASE:-origin/master}'\"

  reviewone = !$EDITOR -p +\"tabdo Gdiff ${REVIEW_BASE:-origin/master}\" +\"let g:gitgutter_diff_base = '${REVIEW_BASE:-origin/master}'\"
  reviewf = !$EDITOR -p $(git files | fzf -m --reverse --height 40%) +\"tabdo Gdiff ${REVIEW_BASE:-origin/master}\" +\"let g:gitgutter_diff_base = '${REVIEW_BASE:-origin/master}'\"
  # For when the diff is too big to review with :Gdiff
  diff-review = !git diff $(git review-base)
  # Review by commit
  by-commit = !git log -p --reverse $(git review-base)..HEAD
  # split-diff, using icdiff
  icdiff = --paginate difftool --tool icdiff
  # show the before, changes, and after for one tracked image
  diff-img = difftool --tool imgdiff
  # Show just the subject and body of a particular commit (default: HEAD)
  message = log -n1 --format=\"%s%n%n%b\"
  # Show a markdown-formatted summary of commits from {REVIEW_BASE:-origin/master} until HEAD
  pr-summary = !git log --reverse --format=\"- **%s** (%h)%n%n%w(74,2,2)%b\" \"${REVIEW_BASE:-origin/master}\"..HEAD
  head = rev-parse HEAD

{{ if lookPath "fzf" }}
  # Show the log in fzf
  fzflog = "!git log --color=always --format=\"%C(auto)%h%d %s %C(black)%C(bold)%cr\" \"${@}\" | fzf --ansi| awk '{print $1}' | pbcopy"
{{ end -}}
