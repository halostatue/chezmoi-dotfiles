#!/bin/bash

# tmux requires unrecognized OSC sequences to be wrapped with DCS tmux; <sequence> ST, and
# for all ESCs in <sequence> to be replaced with ESC ESC. It only accepts ESC backslash
# for ST.
print_osc() {
  if [[ "${TERM}" == screen* ]]; then
    printf "\033Ptmux;\033\033]"
  else
    printf "\033]"
  fi
}

# More of the tmux workaround described above.
print_st() {
  if [[ "${TERM}" == screen* ]]; then
    printf "\a\033\\"
  else
    printf "\a"
  fi
}

show_help() {
  bn0="$(basename "$0")"
  cat >&2 <<HELP
Usage:
   ${bn0} set Fn Label
     Where n is a value from 1 to 20
   ${bn0} set status Label
     Sets the touch bar status button's label
   ${bn0} push [name]
     Saves the current labels with an optional name. Resets labels to their default value, unless name begins with a "." character.
   ${bn0} pop [name]
     If name is given, all key labels up to and including the one with the matching name are popped.

Example:

#!/bin/bash
# Wrapper script for mc that sets key labels
NAME=mc_\$RANDOM
# Save existing labels
${bn0} push \$NAME
${bn0} set F1 Help
${bn0} set F2 Menu
${bn0} set F3 View
${bn0} set F4 Edit
${bn0} set F5 Copy
${bn0} set F6 Move
${bn0} set F7 Mkdir
${bn0} set F8 Del
${bn0} set F9 Menu
${bn0} set F10 Quit
${bn0} set F11 Menu
${bn0} set F13 View
${bn0} set F14 Edit
${bn0} set F15 Copy
${bn0} set F16 Move
${bn0} set F17 Find
mc
# Restore labels to their previous state
${bn0} pop \$NAME
HELP
}

## Main
if [[ $# == 0 ]]; then
  show_help
  exit 1
fi

if [[ $1 == set ]]; then
  if [[ $# != 3 ]]; then
    show_help
    exit 1
  fi
  print_osc
  printf "1337;SetKeyLabel=%s=%s" "$2" "$3"
  print_st
elif [[ $1 == push ]]; then
  if [[ $# == 1 ]]; then
    print_osc
    printf "1337;PushKeyLabels"
    print_st
  elif [[ $# == 2 ]]; then
    if [[ $2 == "" ]]; then
      echo >&2 "Name must not be empty"
      exit 1
    fi
    print_osc
    printf "1337;PushKeyLabels=%s" "$2"
    print_st
  else
    show_help
    exit 1
  fi
elif [[ $1 == pop ]]; then
  if [[ $# == 1 ]]; then
    print_osc
    printf "1337;PopKeyLabels"
    print_st
  elif [[ $# == 2 ]]; then
    if [[ $2 == "" ]]; then
      echo >&2 "Name must not be empty"
      exit 1
    fi
    print_osc
    printf "1337;PopKeyLabels=%s" "$2"
    print_st
  else
    show_help
    exit 1
  fi
else
  show_help
  exit 1
fi
