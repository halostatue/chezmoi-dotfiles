{{- $programs := includeTemplate "programs.tmpl" . | fromJson -}}
# vim: ft=gitconfig

[alias]
  # A typo that turned useful
  addp = add -p

  # This should be default. Whatever.
  co = checkout

  # If we type `git git log`, just run `git log`.
  git = !git

  # Shorter
  staged = diff --cached

  # Useful when resolving conflicts
  stc = diff --stat --name-status --cached

  # Show files that have been otherwise ignored
  ignored = ls-files --others --ignored --exclude-standard

  ls = log --color --graph --pretty=format:'%C(yellow)%d%Creset %Cgreen(%cr)%Creset %C(bold blue)[%an]%Creset %s %Cred(%h)%Creset' --abbrev-commit

  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%an]" --decorate --numstat

  ; review = !"nvim -p $(git files) +\"tabdo Gdiff ${REVIEW_BASE:-origin/$(git main-branch)}\" +\"let g:gitgutter_diff_base = '${REVIEW_BASE:-origin/$(git main-branch)}'\""

  ; reviewone = !"nvim -p +\"tabdo Gdiff ${REVIEW_BASE:-origin/$(git main-branch)}\" +\"let g:gitgutter_diff_base = '${REVIEW_BASE:-origin/$(git main-branch)}'\""
  ; reviewf = !"nvim -p $(git files | fzf -m --reverse --height 40%) +\"tabdo Gdiff ${REVIEW_BASE:-origin/$(git main-branch)}\" +\"let g:gitgutter_diff_base = '${REVIEW_BASE:-origin/$(git main-branch)}'\""

  # Show just the subject and body of a particular commit (default: HEAD)
  message = log -n1 --format=\"%s%n%n%b\"

  # Show a markdown-formatted summary of commits from {REVIEW_BASE:-origin/$(git main-branch)} until HEAD
  head = rev-parse HEAD

  todo = grep -Ee '\\bTODO:?\\b'
  fixme = grep -Ee '\\bFIX(ME)?:?\\b'

  safe = !mkdir .git/safe

  conflicted = "!vim +Conflicted"
