# chezmoi:template:left-delimiter="#[[" right-delimiter="]]"
#[[- $programs := includeTemplate "programs.tmpl" . | fromJson -]]
#[[- $diffPager := "" -]]
#[[- if $programs.delta -]]
#[[-   $diffPager = printf "%s --dark --paging=never" $programs.delta -]]
#[[- else if $programs.diff_so_fancy -]]
#[[-   $diffPager = $programs.diff_so_fancy -]]
#[[- else if $programs.ydfif -]]
#[[-   $diffPager = printf "%s -p cat -s --wrap --width {{ columnWidth }}" $programs.ydiff -]]
#[[- end -]]
# yaml-language-server: $schema=https://json.schemastore.org/lazygit.json

gui:
  windowSize: normal
  scrollHeight: 2
  scrollPastBottom: true
  scrollOffMargin: 2
  scrollOffBehavior: margin
  sidePanelWidth: 0.3333 # Use 0.2 with ydiff
  expandFocusedSidePanel: true
  mainPanelSplitMode: flexible
  language: en
  timeFormat: 02 Jan 06 15:04 MST
  theme:
    activeBorderColor:
      - green
      - bold
    inactiveBorderColor:
      - white
    searchingActiveBorderColor:
      - cyan
      - bold
    optionsTextColor:
      - blue
    selectedLineBgColor:
      - blue # set to `default` to have no background colour
    selectedRangeBgColor:
      - blue
    cherryPickedCommitBgColor:
      - cyan
    cherryPickedCommitFgColor:
      - blue
    unstagedChangesColor:
      - red
    defaultFgColor:
      - default
  commitLength:
    show: true
  mouseEvents: true
  skipDiscardChangeWarning: false
  skipStashWarning: false
  showFileTree: true
  showListFooter: true
  showRandomTip: true
  showBranchCommitHash: false
  showBottomLine: true
  showPanelJumps: true
  showCommandLog: true
  nerdFontsVersion: '' # nerd fonts version to use ("2" or "3"); empty means don't show nerd font icons
  commandLogSize: 8
  splitDiff: auto
  skipRewordInEditorWarning: false
  border: rounded
  animateExplosion: true
  portraitMode: auto

git:
  paging:
    colorArg: always
    useConfig: false
    pager: #[[ $diffPager ]]
    # pager: diff-so-fancy
    # pager: ydiff -p cat -s --wrap --width={{ columnWidth }}
  commit:
    signOff: true
  merging:
    manualCommit: false
    args: ''
  log:
    order: topo-order
    showGraph: when-maximised
    showWholeGraph: false
  skipHookPrefix: WIP
  mainBranches: [main, master]
  autoFetch: true
  autoRefresh: true
  fetchAll: true
  branchLogCmd: >
    git log --graph --color=always --abbrev-commit --decorate --date=relative
    --pretty=medium {{ branchName }} --
  allBranchesLogCmd: >
    git log --graph --all --color=always --abbrev-commit --decorate --date=relative
    --pretty=medium
  disableForcePushing: false
  overrideGpg: true
  parseEmoji: false

os:
  editPreset: vim

refresher:
  fetchInterval: 60
  refreshInterval: 10

update:
  method: prompt
  days: 14

confirmOnQuit: false
quitOnTopLevelReturn: false
disableStartupPopups: false
promptToReturnFromSubprocess: true
notARepository: skip

keybinding:
  universal:
    confirm: '<enter>'
    copyToClipboard: '<c-o>'
    createPatchOptionsMenu: '<c-p>'
    createRebaseOptionsMenu: 'm'
    decreaseContextInDiffView: '{'
    diffingMenu: 'W'
    edit: 'e'
    executeCustomCommand: ':'
    extrasMenu: '@'
    filteringMenu: '<c-s>'
    goInto: '<enter>'
    gotoBottom: '>'
    gotoTop: '<'
    increaseContextInDiffView: '}'
    jumpToBlock: [1, 2, 3, 4, 5]
    new: 'n'
    nextBlock-alt: 'l'
    nextBlock: '<right>'
    nextItem-alt: 'j'
    nextItem: '<down>'
    nextMatch: n
    nextPage: '.'
    nextScreenMode: '+'
    nextTab: ']'
    openFile: 'o'
    openRecentRepos: '<c-r>'
    optionMenu-alt1: '?'
    prevBlock-alt: 'h'
    prevBlock: '<left>'
    prevItem-alt: 'k'
    prevItem: '<up>'
    prevMatch: 'N'
    prevPage: ','
    prevScreenMode: '_'
    prevTab: '['
    pullFiles: 'p'
    pushFiles: 'P'
    quit-alt1: '<c-c>'
    quit: 'q'
    quitWithoutChangingDirectory: 'Q'
    redo: '<c-z>'
    refresh: 'R'
    remove: 'd'
    return: '<esc>'
    scrollDownMain-alt1: 'J'
    scrollDownMain-alt2: '<c-d>'
    scrollDownMain: '<pgdown>'
    scrollLeft: 'H'
    scrollRight: 'L'
    scrollUpMain-alt1: 'K'
    scrollUpMain-alt2: '<c-u>'
    scrollUpMain: '<pgup>'
    select: '<space>'
    submitEditorText: '<enter>'
    togglePanel: '<tab>'
    toggleWhitespaceInDiffView: '<c-w>'
    undo: 'z'

  status:
    checkForUpdate: 'u'
    recentRepos: '<enter>'

  files:
    amendLastCommit: 'A'
    commitChanges: 'c'
    commitChangesWithEditor: 'C'
    commitChangesWithoutHook: 'w'
    fetch: 'f'
    ignoreFile: 'i'
    openMergeTool: 'M'
    openStatusFilter: '<c-b>'
    refreshFiles: 'r'
    stashAllChanges: 's'
    toggleStagedAll: 'a'
    toggleTreeView: '`'
    viewResetOptions: 'D'
    viewStashOptions: 'S'

  branches:
    checkoutBranchByName: 'c'
    createPullRequest: 'o'
    createTag: 'T'
    fastForward: 'f'
    fetchRemote: 'f'
    forceCheckoutBranch: 'F'
    mergeIntoCurrentBranch: 'M'
    pushTag: 'P'
    rebaseBranch: 'r'
    renameBranch: 'R'
    setUpstream: 'u'
    viewGitFlowOptions: 'i'
    viewPullRequestOptions: 'O'

  commits:
    amendToCommit: 'A'
    checkoutCommit: '<space>'
    cherryPickCopy: 'c'
    cherryPickCopyRange: 'C'
    copyCommitMessageToClipboard: '<c-y>'
    createFixupCommit: 'F'
    markCommitAsFixup: 'f'
    moveDownCommit: '<c-j>'
    moveUpCommit: '<c-k>'
    openLogMenu: '<c-l>'
    pasteCommits: 'v'
    pickCommit: 'p'
    renameCommit: 'r'
    renameCommitWithEditor: 'R'
    resetCherryPick: '<c-R>'
    revertCommit: 't'
    squashAboveCommits: 'S'
    squashDown: 's'
    tagCommit: 'T'
    viewBisectOptions: 'b'
    viewResetOptions: 'g'

  stash:
    popStash: 'g'
    renameStash: 'r'

  commitFiles:
    checkoutCommitFile: 'c'

  main:
    pickBothHunks: 'b'
    toggleDragSelect-alt: 'V'
    toggleDragSelect: 'v'
    toggleSelectHunk: 'a'

  submodules:
    bulkMenu: 'b'
    init: 'i'
    update: 'u'

customCommands:
  - key: 'b'
    command: gh browse
    context: 'files'
    description: Browse the current repo

  - key: b
    command: gh browse "{{ .SelectedLocalCommit.Sha }}"
    context: commits
    description: Browse the current repo at the selected ref

  - key: f
    command: git difftool -y "{{ .SelectedLocalCommit.Sha }} -- {{ .SelectedCommitFile.Name }}"
    context: commitFiles
    description: Compare (difftool) with local copy

  - key: F
    command: git difftool -yg "{{ .SelectedLocalCommit.Sha }} -- {{ .SelectedCommitFile.Name }}"
    context: commitFiles
    description: Compare (gui difftool) with local copy

  - key: <c-P>
    command: gh pr checkout "{{ index .PromptResponses 0 }}"
    context: localBranches
    loadingText: Checkout out PR {{ index .PromptResponse 0 }}
    prompts:
      - title: PR#
        type: input
        key: PrNumber
    description: Check out PR branch
  - key: <c-b>
    command: tig blame -- "{{ .SelectedFile.Name }}"
    context: files
    subprocess: true
    description: Blame file at tree
  - key: <c-b>
    command: tig blame "{{ .SelectedSubCommit.Sha }}" -- "{{ .SelectedCommitFile.Name }}"
    context: commitFiles
    subprocess: true
    description: Blame file at revision
  - key: <c-B>
    command: tig blame -- "{{ .SelectedCommitFile.Name }}"
    context: commitFiles
    subprocess: true
    description: Blame file at tree
  - key: t
    command: tig show {{ .SelectedSubCommit.Sha }}
    context: subCommits
    subprocess: true
    description: tig commit (`t` again to browse files at revision)
  - key: t
    command: tig show "{{ .SelectedLocalBranch.Name }}"
    context: localBranches
    subprocess: true
    description: tig branch (`t` again to browse files at revision)
  - key: t
    command: tig show "{{ .SelectedRemoteBranch.RemoteName }}/{{ .SelectedRemoteBranch.Name }}"
    context: remoteBranches
    subprocess: true
    description: tig branch (`t` again to browse files at revision)
  - key: t
    command: tig {{ .SelectedSubCommit.Sha }} -- "{{ .SelectedCommitFile.Name }}"
    context: commitFiles
    subprocess: true
    description: tig file (history of commits affecting file)
  - key: t
    command: tig -- "{{ .SelectedFile.Name }}"
    context: files
    subprocess: true
    description: tig file (history of commits affecting file)
