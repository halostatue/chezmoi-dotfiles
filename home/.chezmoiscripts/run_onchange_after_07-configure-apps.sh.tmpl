#!/usr/bin/env bash

readonly script_name=run_onchange_after-07-configure-apps.sh.tmpl
readonly lib_bash='{{ joinPath .chezmoi.workingTree "lib/lib.bash" }}'
# shellcheck source=lib/lib.bash
source "${lib_bash}"
setup '07: Configure Apps'

if ! plutil -lint /Library/Preferences/com.apple.TimeMachine.plist >/dev/null 2>/dev/null; then
  cat >&2 <<FDA
${script_name} requires that a terminal has Full Disk Access.

Add this terminal to Full Disk Access, restart the terminal, and try
'chezmoi apply' again.

  System Preferences > Security & Privacy > Full Disk Access
  System Settings > Privacy & Security > Full Disk Access

FDA
  exit 1
fi

info "Several changes in this script require sudo permission."
sudo -v

# Keep-alive: update existing `sudo` time stamp until the script is done.
while true; do
  sudo -n true
  sleep 60
  kill -0 "$$" || exit
done >/dev/null 2>/dev/null &

case "$(uname -s)" in
Darwin)
  # Many of these were originally sourced from Mathias Bynens, but have also been sourced
  # from https://macos-defaults.com and other dotfile collections.

  osascript -e 'tell application "System Preferences" to quit'

  declare -A restart
  restart=(
    [cfprefsd]=1
  )

  {
    : # Dock settings

    # Set the dock position. Valid values are left, bottom, and right. Left and right dock
    # positions also affect the position of the program switcher if you have multiple
    # screensi
    defaults write com.apple.dock orientation -string bottom

    # The dock icon size in pixels.
    defaults write com.apple.dock tilesize -int 36
    # Make the default magnification tiny
    defaults write com.apple.dock magnification -int 1
    # Make the largest magnification big
    defaults write com.apple.dock largesize -int 101

    # Auto hide the dock
    defaults write com.apple.dock autohide -bool true
    # Speed up the dock auto-hide animation.
    defaults write com.apple.dock autohide-time-modifier -float 0.1
    # Reduce the dock auto-hide delay.
    defaults write com.apple.dock autohide-delay -float 0.1

    # Don't show recent apps in the dock.
    defaults write com.apple.dock show-recents -bool false

    # Scroll over Dock icon to Exposé app
    defaults write com.apple.dock scroll-to-open -bool true

    # Shade hidden application icons darker
    defaults write com.apple.dock showhidden -bool true

    # Sets the minimize animation effect.
    defaults write com.apple.dock mineffect -string genie
    # Minimize windows into their application's icon
    defaults write com.apple.dock minimize-to-application -bool true

    # Disable automatic space rearrangement
    defaults write com.apple.dock mru-spaces -bool false

    # Disable icon bouncing in the dock.
    # defaults write com.apple.dock no-bouncing -bool true

    # Have Exposé group windows by application.
    defaults write com.apple.dock expose-group-apps -bool true
    # Speed up Mission Control animations
    defaults write com.apple.dock expose-animation-duration -float 0.1

    # Enable highlight hover effect for the grid view of a stack (Dock)
    defaults write com.apple.dock mouse-over-hilite-stack -bool true

    # Switch to a Space with an open window for the activated application.
    defaults write NSGlobalDomain AppleSpacesSwitchOnActivate -bool true

    # Animate opening applications from the Dock
    defaults write com.apple.dock launchanim -bool true

    # Require password immediately after sleep or screen saver begins
    # defaults write com.apple.screensaver askForPassword -int 1
    # defaults write com.apple.screensaver askForPasswordDelay -int 0

    # Show indicator lights for open applications in the Dock
    defaults write com.apple.dock show-process-indicators -bool true
    # Disable the timestamp as part of the screenshot capture name.
    # defaults write com.apple.screencapture include-date -bool false

    # Change where screenshots are saved.
    # defaults write com.apple.screencapture location -string "~/Desktop"

    # Show screenshot thumbnail after the screenshot is taken.
    # defaults write com.apple.screencapture show-thumbnail -bool true

    # Change the screenshot format. Must be one of heic, png, jpg, pdf, psd, gif, tga,
    # tiff, or bmp.
    defaults write com.apple.screencapture type -string heic

    restart[Dock]=1
    restart[SystemUIServer]=1
  }

  {
    : # Finder settings

    # Show all finder extensions in Finder
    defaults write NSGlobalDomain AppleShowAllExtensions -bool true

    # Show Unix hidden files in Finder
    defaults write com.apple.Finder AppleShowAllFiles -bool true

    # Show path bar at bottom of Finder
    defaults write com.apple.finder ShowPathbar -bool true

    # Chnge default view style. One of clmv (column), Nlsv (list), glyv (gallery), or icnv
    # (icon, the default).
    defaults write com.apple.finder FXPreferredViewStyle -string Nlsv

    # Show folders before files
    defaults write com.apple.finder _FXSortFoldersFirst -bool true
    defaults write com.apple.finder _FXSortFoldersFirstOnDesktop -bool true

    # Open a new tab in a new window, instead of a tab
    # defaults write com.apple.finder FinderSpawnTab -bool false

    # Set the default search scope. One of SCcf (current folder), SCsp (previous scope),
    # SCev (whole Mac, the default).
    defaults write com.apple.finder FXDefaultSearchScope -string SCcf

    # Automatically empty trash after 30 days. Disabled by default.
    # defaults write com.apple.finder FXRemoveOldTrashItems -bool false

    # Disable the extension change warning.
    defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

    # Save documents to local drive first.
    # defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

    # Expand save panel by default (this appears not to be working in macOS 14+).
    # defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
    # defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

    # Expand print panel by default (this appears not to be working in macOS 14+).
    # defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
    # defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

    # Show proxy icons by default. This will *fail* if the terminal does not have Full
    # Disk Access.
    defaults write com.apple.universalaccess showWindowTitlebarIcons -bool true

    # Show proxy icons with no delay (the default is 0.5 seconds).
    # Do not set if `showWindowTitlebarIcons` is true.
    # defaults write NSGlobalDomain NSToolbarTitleViewRolloverDelay -float 0

    # Set the sidebar icon size to 1 (small), 2 (medium, the default), or 3 (large).
    defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

    # Hide desktop icons.
    # defaults write com.apple.finder CreateDesktop -bool false

    # Show scrollbars only when scrolling. Must be one of `WhenScrolling`, `Automatic` or
    # `Always`.
    defaults write NSGlobalDomain AppleShowScrollBars -string WhenScrolling

    # Increase window resize speed for Cocoa applications
    defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

    # Set Downloads as the default location for new Finder windows. Use `PfDe` and
    # `file://${HOME}/Desktop/` for Desktop.
    #
    # For other paths, use `PfLo` and `file:///full/path/here/`
    defaults write com.apple.finder NewWindowTarget -string "PfLo"
    defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Downloads/"

    # Display full POSIX path as Finder window title
    defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

    # Show drive icons on desktop.
    #
    # - Internal drives (default false)
    # - External drives (default true)
    # - Removable media (default true)
    # - Connected servers (default false)
    # defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
    # defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
    # defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false
    # defaults write com.apple.finder ShowMountedServersOnDesktop -bool true

    # Automatically quit printer app once the print jobs complete
    defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

    # Avoid creating .DS_Store files on network or USB volumes
    defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
    defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

    # Allow text selection in Quick Look
    defaults write com.apple.finder QLEnableTextSelection -bool true

    defaults write com.apple.finder SearchRecentsSavedViewStyle -string Nlsv

    # Finder: show status bar
    defaults write com.apple.finder ShowStatusBar -bool true

    # Enable spring loading for directories
    defaults write NSGlobalDomain com.apple.springing.enabled -bool true

    # Remove the spring loading delay for directories
    defaults write NSGlobalDomain com.apple.springing.delay -float 0

    # Show item info near icons on the desktop and in other icon views
    /usr/libexec/PlistBuddy \
      -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" \
      ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy \
      -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" \
      ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy \
      -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" \
      ~/Library/Preferences/com.apple.finder.plist

    # Show item info to the right of the icons on the desktop
    /usr/libexec/PlistBuddy \
      -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" \
      ~/Library/Preferences/com.apple.finder.plist

    # Enable snap-to-grid for icons on the desktop and in other icon views
    /usr/libexec/PlistBuddy \
      -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" \
      ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy \
      -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" \
      ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy \
      -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" \
      ~/Library/Preferences/com.apple.finder.plist

    # Increase grid spacing for icons on the desktop and in other icon views
    /usr/libexec/PlistBuddy \
      -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" \
      ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy \
      -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" \
      ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy \
      -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" \
      ~/Library/Preferences/com.apple.finder.plist

    # Increase the size of icons on the desktop and in other icon views
    /usr/libexec/PlistBuddy \
      -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" \
      ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy \
      -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" \
      ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy \
      -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" \
      ~/Library/Preferences/com.apple.finder.plist

    restart[Finder]=1
  }

  {
    : # Software Update settings

    # Check for software updates daily, not just once per week
    defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

    # Enable automatic update check
    defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true

    # Download newly available updates in background
    defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1

    # Install System data files & security updates
    defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

    # Automatically download apps purchased on other Macs
    defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 1

    # Turn on app auto-update
    defaults write com.apple.commerce AutoUpdate -bool true

    # Allow the App Store to reboot machine on macOS updates
    defaults write com.apple.commerce AutoUpdateRestartRequired -bool true

    # Enable the WebKit Developer Tools in the Mac App Store
    defaults write com.apple.appstore WebKitDeveloperExtras -bool true

    # Enable Debug Menu in the Mac App Store
    defaults write com.apple.appstore ShowDebugMenu -bool true
  }

  {
    : # Safari settings

    # Privacy: don't send search queries to Apple
    # defaults write com.apple.Safari UniversalSearchEnabled -bool false
    # defaults write com.apple.Safari SuppressSearchSuggestions -bool true

    # Press Tab to highlight each item on a web page
    defaults write com.apple.Safari WebKitTabToLinksPreferenceKey -bool true
    defaults write com.apple.Safari \
      com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks -bool true

    # Make Safari's search banners default to Contains instead of Starts With
    defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false

    # Show the full URL in the address bar (note: this still hides the scheme)
    defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true

    # Set Safari's home page to `about:blank` for faster loading
    # defaults write com.apple.Safari HomePage -string "about:blank"

    # Prevent Safari from opening 'safe' files automatically after downloading
    defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

    # Disable hitting the Backspace key to go to the previous page in history
    defaults write com.apple.Safari \
      com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled \
      -bool false

    # Hide Safari's bookmarks bar by default
    # defaults write com.apple.Safari ShowFavoritesBar -bool false

    # Enable Safari's debug menu
    defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

    # Make Safari's search banners default to Contains instead of Starts With
    defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false

    # Remove useless icons from Safari's bookmarks bar
    # defaults write com.apple.Safari ProxiesInBookmarksBar "()"

    # Enable the Develop menu and the Web Inspector in Safari
    defaults write com.apple.Safari IncludeDevelopMenu -bool true
    defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
    defaults write com.apple.Safari \
      com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled \
      -bool true

    # Add a context menu item for showing the Web Inspector in web views
    defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

    # Enable continuous spellchecking
    defaults write com.apple.Safari WebContinuousSpellCheckingEnabled -bool true
    # Disable auto-correct
    defaults write com.apple.Safari WebAutomaticSpellingCorrectionEnabled -bool false

    # Disable AutoFill
    # defaults write com.apple.Safari AutoFillFromAddressBook -bool false
    # defaults write com.apple.Safari AutoFillPasswords -bool false
    # defaults write com.apple.Safari AutoFillCreditCardData -bool false
    # defaults write com.apple.Safari AutoFillMiscellaneousForms -bool false

    # Warn about fraudulent websites
    defaults write com.apple.Safari WarnAboutFraudulentWebsites -bool true

    restart[Safari]=1
  }

  {
    : # TextEdit settings

    # Set default TextEdit document format as plain text
    defaults write com.apple.TextEdit RichText -bool false

    # Open and save files as UTF-8
    defaults write com.apple.TextEdit PlainTextEncoding -int 4
    defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

    restart[TextEdit]=1
  }

  {
    : # Mail settings
    # Disable send and reply animations in Mail.app
    defaults write com.apple.mail DisableReplyAnimations -bool true
    defaults write com.apple.mail DisableSendAnimations -bool true

    # Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app
    defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false

    # Add the keyboard shortcut ⌘ + Enter to send an email in Mail.app
    defaults write com.apple.mail NSUserKeyEquivalents -dict-add "Send" "@\U21a9"

    # Display emails in threaded mode, sorted by date (oldest at the top)
    defaults write com.apple.mail DraftsViewerAttributes -dict-add "DisplayInThreadedMode" -string "yes"
    defaults write com.apple.mail DraftsViewerAttributes -dict-add "SortedDescending" -string "yes"
    defaults write com.apple.mail DraftsViewerAttributes -dict-add "SortOrder" -string "received-date"

    # Disable inline attachments (just show the icons)
    defaults write com.apple.mail DisableInlineAttachmentViewing -bool true

    restart[Mail]=1
  }

  {
    : # Terminal

    # Only use UTF-8 in Terminal.app
    defaults write com.apple.terminal StringEncodings -array 4

    restart[Terminal]=1
  }

  {
    : Time machine

    # Prevent Time Machine from prompting to use new hard drives as backup volume
    defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

    # Disable local Time Machine backups
    # command -v tmutil >/dev/null 2>/dev/null && sudo tmutil disable local
  }

  {
    : Activity Monitor
    # Show the main window when launching Activity Monitor
    defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

    # Visualize CPU usage in the Activity Monitor Dock icon
    defaults write com.apple.ActivityMonitor IconType -int 5

    # Show all processes in Activity Monitor
    defaults write com.apple.ActivityMonitor ShowCategory -int 0

    # Sort Activity Monitor results by CPU usage
    defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
    defaults write com.apple.ActivityMonitor SortDirection -int 0

    restart["Activity Monitor"]=1
  }

  # Move archive files to trash after expansion. Delete entirely by using "/dev/null" and
  # leave in-place with "." (the default).
  defaults write com.apple.archiveutility dearchive-move-after -string "${HOME}/.Trash"

  {
    # Turn off two-finger swipe to go left on Chrome. Just scroll left and stop.
    defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false
    defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false

    # Use the system-native print preview dialog
    defaults write com.google.Chrome DisablePrintPreview -bool true
    defaults write com.google.Chrome.canary DisablePrintPreview -bool true

    # Expand the print dialog by default
    defaults write com.google.Chrome PMPrintingExpandedStateForPrint2 -bool true
    defaults write com.google.Chrome.canary PMPrintingExpandedStateForPrint2 -bool true
  }

  # Turn off vim search text to find pasteboard
  defaults write org.vim.MacVim MMShareFindPboard 0

  # Remove duplicates in the "Open With" menu (also see `lscleanup` alias)
  # /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user

  # Prevent Photos from opening automatically when devices are plugged in
  defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

  for app in "${!restart[@]}"; do
    killall "${app}" >/dev/null 2>/dev/null || true
  done

  # GPG settings
  if has gpg-connect-agent; then
    gpg-connect-agent reloadagent /bye || true
  fi

  info "Done. Note that some of these changes require a logout/restart to take effect."
  ;;

*) : ;;
esac

# Make chezmoi use Git with SSH
(
  cd "${CHEZMOI_WORKING_TREE:?}" || exit 1
  declare CHEZMOI_SSH_URL
  CHEZMOI_SSH_URL="$(git remote get-url origin | sed -Ene's#https://([^/]*)/([^/]*/.*.git)#git@\1:\2#p')"
  [[ -z ${CHEZMOI_SSH_URL} ]] || git remote set-url origin "${CHEZMOI_SSH_URL}"
)
