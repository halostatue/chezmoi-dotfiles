#!/usr/bin/env bash

set -uo pipefail

on-ERR() {
  local status=$?
  echo >&2 Error executing run_onchange_after_install-3-rust-packages.sh.tmpl
  exit ${status}
}

trap on-ERR ERR

declare verbose
verbose=false
[[ "${CHEZMOI_VERBOSE:-}" == 1 ]] && verbose=true

if "${verbose}"; then
  echo 3: Install Rust Packages

  if "${DEBUG_SCRIPTS:-false}"; then
    set -x
  fi
fi

if ! command -v cargo >/dev/null 2>/dev/null || ! [[ -s "${HOME}"/.cargo/env ]]; then
  if "${verbose}"; then
    echo >&2 "cargo (rust) is not installed"
    exit 1
  fi

  exit 0
fi

if ! cargo --list 2>&1 | grep -Eq '\b(?:binstall|install-update)$'; then
  if "${verbose}"; then
    echo >&2 "cargo-binstall and/or cargo-install-update are not installed"
    exit 1
  fi

  exit 0
fi

case "$(uname -s)" in
Darwin)
  if command -v port >/dev/null 2>&1; then
    # There are known issues with Macports libiconv and git for Rust packages.
    sudo port -q deactivate -f libiconv >/dev/null 2>&1 || true
    sudo port -q deactivate -f git >/dev/null 2>&1 || true

    reenable-libiconv() {
      sudo port -q activate libiconv >/dev/null 2>&1 || true
      sudo port -q activate git >/dev/null 2>&1 || true
    }

    trap reenable-libiconv EXIT
  fi
  ;;
esac

cargo-pkg() {
  local -a args flags cmd
  local git can_fail
  git=false
  can_fail=false
  flags=()
  cmd=(cargo)

  while (($#)); do
    case "$1" in
    '?') can_fail=true ;;
    ::) break ;;
    https://*.git)
      args+=(--git "$1")
      git=true
      ;;
    +*) cmd+=("$1") ;;
    *) args+=("$1") ;;
    esac

    shift
  done

  if ! "${verbose}"; then
    flags+=(--quiet)
  fi

  if "${git}"; then
    flags+=(--force)
  else
    flags+=(--allow-no-update)
  fi

  if ! "${git}" && cargo install-update -lq "${args[@]}"; then
    return 0
  fi

  if "${git}"; then
    cmd+=(install "${flags[@]}" "${args[@]}")
  else
    cmd+=(install-update "${flags[@]}" "${args[@]}")
  fi

  if ! "${cmd[@]}"; then
    if "${can_fail}"; then
      return 0
    fi

    return 1
  fi
}

# Crates Hash: {{ include (joinPath .chezmoi.workingTree "Setup/Crates") | sha256sum }}
while read -r -a crate; do
  if [[ "${crate[*]}" =~ ^\s*#.*$ ]] || [[ "${crate[*]}" =~ ^\s*$ ]]; then
    continue
  fi

  if ! cargo-pkg "${crate[@]}"; then
    echo >&2 "Error installing ${crate[*]}"
    exit 1
  fi
done <"${CHEZMOI_WORKING_TREE}/Setup/Crates"

# Installations that require manual installation
# (
#   set -e
#   cd "$(mktemp -d)"
#   if "${verbose}"; then
#     git clone https://github.com/cquintana92/git-switch-user.git
#   else
#     git clone https://github.com/cquintana92/git-switch-user.git >/dev/null 2>/dev/null
#   fi
#
#   cd git-switch-user
#   if "${verbose}"; then
#     cargo install --force --locked --path .
#   else
#     cargo install --quiet --force --locked --path .
#   fi
# )
