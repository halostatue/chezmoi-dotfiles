#!/usr/bin/env bash
#
# Usage: git-up
#        git-reup
#
# Like git-pull but show a short and sexy log of changes
# immediately after merging (git-up) or rebasing (git-reup).
#
# Inspired by Kyle Neath's `git up' alias:
# http://gist.github.com/249223
#
# Stolen from Ryan Tomayko
# http://github.com/rtomayko/dotfiles/blob/rtomayko/bin/git-up
#
# ‚ùØ git fetch -mp && git reup && git branch -vv && git submodule update --init --recursive

set -euo pipefail

declare is_reup
is_reup=false
test "$(basename "${0}")" = "git-reup" && is_reup=true

declare -a pull_args

if (($#)); then
  pull_args=("${@}")
else
  pull_args=()
fi

# when invoked as git-reup, run as `git pull --rebase'
${is_reup} && pull_args=(--rebase "${pull_args[@]}")

git pull "${pull_args[@]}"

# show diffstat of all changes if we're pulling with --rebase. not
# sure why git-pull only does this when merging.
${is_reup} && {
  echo "Diff:"
  git --no-pager diff --color --stat HEAD@'{1}'.. |
    sed 's/^/ /'
}

# show an abbreviated commit log of stuff that was just merged.
echo "Log:"
git log --color --pretty=oneline --abbrev-commit HEAD@'{1}'.. |
  sed 's/^/  /'
